apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.google.protobuf'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlinx-serialization'

apply plugin: 'com.google.gms.google-services'

apply plugin: "com.google.osdetector"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.morioka.thirdproject"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 27
        versionName "27"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility '1.8'
        targetCompatibility '1.8'
    }
    packagingOptions {
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'
    }
}

//def tcnative_classifier = osdetector.classifier

def kotlin_version = '1.3.31'
def kotlinCoroutinesVersion = '1.0.0'
def grpc_version = '1.21.0'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

//    implementation 'io.netty:netty-tcnative-boringssl-static:1.1.33.Fork26'
    implementation "io.grpc:grpc-netty-shaded:$grpc_version"
//    implementation 'io.netty:netty-tcnative-boringssl-static:2.0.22.Final:' + tcnative_classifier
    implementation 'io.netty:netty-tcnative-boringssl-static:2.0.25.Final'
//    implementation 'org.eclipse.jetty.alpn:alpn-api:1.1.2.v20150522'


    implementation "io.grpc:grpc-okhttp:$grpc_version"
    implementation "io.grpc:grpc-protobuf-lite:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "javax.annotation:javax.annotation-api:1.2"
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-analytics:16.5.0'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'

//    implementation 'org.conscrypt:conscrypt-openjdk:2.1.0:'
    implementation 'org.conscrypt:conscrypt-android:2.1.0'

//    implementation 'org.conscrypt:conscrypt-openjdk:2.1.0:' + osdetector.classifier

    implementation "android.arch.persistence.room:runtime:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"
}

//def protobufVersion = '3.6.1'

kotlin {
    experimental {
        coroutines 'enable'
    }
}

repositories {
    jcenter()
    // artifacts are published to this repository
    maven { url "https://kotlin.bintray.com/kotlinx" }
    mavenCentral()
}


protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.18.0' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

